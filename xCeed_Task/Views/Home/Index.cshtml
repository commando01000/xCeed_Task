@using Service.Layer.ViewModels.Tasks
@model Service.Layer.ViewModels.Home.HomeVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = "Tasks";
}


<div class="container mt-4">
    <h2 class="mb-4">Tasks</h2>
    @if (!Model.TasksList.Any() && Model.PaginatedTasks == null)
    {
        <div class="alert alert-info">No tasks found.</div>
    }
    else
    {
        if (User.IsInRole("Admin"))
        {
            <div class="mb-3">
                <label for="priorityFilter" class="form-label">Filter by Priority:</label>
                <select id="priorityFilter" class="form-select w-auto d-inline-block">
                    <option value="">All</option>
                    @foreach (var priority in Enum.GetValues(typeof(TaskPriority)))
                    {
                        <option value="@priority">@priority</option>
                    }
                </select>
            </div>
            <div id="admin-tasks-table">
                <partial name="~/Views/PartialViews/_AdminTasks.cshtml" model="Model.PaginatedTasks" />
            </div>
        }
        else
        {
            <div class="mb-3">
                <label for="priorityFilter" class="form-label">Filter by Priority:</label>
                <select id="priorityFilter" class="form-select w-auto d-inline-block">
                    <option value="">All</option>
                    <option value="High">High</option>
                    <option value="Medium">Medium</option>
                    <option value="Low">Low</option>
                </select>
            </div>
            <table id="tasksTable" class="table table-bordered table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Task Name</th>
                        <th>Description</th>
                        <th>Priority</th>
                        <th>Due Date</th>
                        <th>Assigned User</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model.TasksList)
                    {
                        <tr>
                            <td>@task.TaskName</td>
                            <td>@(task.Description.Length > 50 ? task.Description.Substring(0, 50) + "..." : task.Description)</td>
                            <td>
                                <span class="badge @GetPriorityClass(task.Priority)">
                                    @task.Priority
                                </span>
                            </td>
                            <td>@task.DueDate.ToShortDateString()</td>
                            <td>@(task.AssignedUserName != null ? @task.AssignedUserName : "Unassigned")</td>
                            <td>
                                <a asp-controller="Task" asp-action="Details" asp-route-id="@task.Id" class="btn btn-sm btn-outline-info">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
</div>

@section Scripts {

    <script src="~/js/Tasks/index.js"></script>
}

@functions {
    // Helper method to get the CSS class for the priority badge
    string GetPriorityClass(TaskPriority priority)
    {
        return priority switch
        {
            TaskPriority.High => "bg-danger text-white",
            TaskPriority.Medium => "bg-warning text-dark",
            TaskPriority.Low => "bg-success text-white",
            _ => "bg-secondary text-white"
        };
    }
}
